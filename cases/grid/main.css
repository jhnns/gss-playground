:root {
    /*
    These variables relate to the mobile layout.
    They are overridden in the following media queries to adapt to different screen sizes.
    */
    --gap: 16px;
    --block-gap: 24px;
    --floating-image-width: 100%;
    --floating-image-float: none;
    --header-h1-width: var(--col-width);
    --floating-image-margin: var(--block-gap) 0 var(--block-gap) 0;
    --content-width: calc(100vw - 20px); /* 20px is the average scrollbar */
    --col-width: calc((var(--content-width) - (var(--num-of-cols) + 1) * var(--gap)) / var(--num-of-cols));
}

@media (max-width: 549px) {
    :root {
        --num-of-cols: 1;
    }

    .grid {
        grid-template-columns:
            [header-left wide-image-left] 1fr
            [text-body-left] var(--col-width)
            [text-body-right] 1fr
            [header-right wide-image-right];
    }
}

@media (min-width: 550px) {
    :root {
        --num-of-cols: 6;
        --header-h1-width: calc(4 * var(--col-width) + 3 * var(--gap))
    }

    .grid {
        grid-template-columns:
            [header-left wide-image-left] 1fr var(--col-width)
            [text-body-left] repeat(4, var(--col-width))
            [text-body-right] var(--col-width) 1fr
            [header-right wide-image-right];
    }
}

@media (min-width: 960px) {
    :root {
        --floating-image-width: calc(4 * var(--col-width) + 3 * var(--gap));
        --floating-image-float: left;
        --floating-image-margin: var(--block-gap) var(--gap) var(--block-gap) calc(-1 * (2 * var(--col-width) + 2 * var(--gap)));
        --num-of-cols: 12;
        --header-h1-width: calc(8 * var(--col-width) + 7 * var(--gap))
    }

    .grid {
        grid-template-columns:
            [header-left wide-image-left] 1fr repeat(3, var(--col-width))
            [text-body-left] repeat(6, var(--col-width))
            [text-body-right] repeat(3, var(--col-width)) 1fr
            [header-right wide-image-right];
    }
}

@media (min-width: 1300px) {
    :root {
        --content-width: 1300px;
        --header-h1-width: calc(6 * var(--col-width) + 5 * var(--gap))
    }

    .grid {
        grid-template-columns:
            [header-left] 1fr var(--col-width)
            [wide-image-left] repeat(2, var(--col-width))
            [text-body-left] repeat(6, var(--col-width))
            [text-body-right] repeat(2, var(--col-width))
            [wide-image-right] var(--col-width) 1fr
            [header-right];
    }
}

.grid {
    display: grid;
    grid-column-gap: var(--gap);
}

.text-body {
    grid-column: text-body-left / text-body-right;
    margin-bottom: var(--block-gap);
}

.text-body > p {
    margin: 0 0 var(--gap);
}

.text-body > p:last-child {
    margin-bottom: 0;
}

.floating-image-left {
    width: var(--floating-image-width);
    float: var(--floating-image-float);
    margin: var(--floating-image-margin);
}

.wide-image {
    grid-column: wide-image-left / wide-image-right;
    margin-bottom: var(--block-gap);
}

.wide-image > img {
    max-width: 100%;
}

#header {
    grid-column: header-left / header-right;
}

#header h1 {
    margin-top: 50vh;
    margin-bottom: 3em;

    /* Does not work because there are no subgrids yet */
    /* http://meyerweb.com/eric/thoughts/2016/01/15/subgrids-considered-essential/ */
    grid-column: text-left / text-right;

    /* That's why we have to set these: */
    max-width: var(--header-h1-width);
    margin-left: auto;
    margin-right: auto;
}

#visual-grid {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}

@media (max-width: 959px) {
    #visual-col-8,
    #visual-col-9,
    #visual-col-10,
    #visual-col-11,
    #visual-col-12,
    #visual-col-13,
    #visual-col-14 {
        display: none;
    }
}

@media (max-width: 550px) {
    #visual-col-4,
    #visual-col-5,
    #visual-col-6,
    #visual-col-7 {
        display: none;
    }
}
